In September of 2016 we stopped accepting applications for RC Start, our mentorship program for new programmers. We stopped running RC Start because we didn’t get the results we expected, and because we realized it was a strategic mistake.

We introduced RC Start in January of 2016. It was a free, one-on-one mentorship program for people just beginning as programmers. Each person who was admitted to RC Start was matched with an RC alum for three 45-minute sessions, either in person or on Skype. What happened in the sessions was entirely up to the RC Start participant and their mentor, and if both people were interested, they were welcome to continue meeting after the initial three sessions.

We made RC Start because we thought it would be a useful thing to have in the world. Lots of people want to get started as programmers, but starting out can be intimidating. We knew from our own experience how helpful a few well-placed pieces of advice can be. We were also sad to regularly have to reject people who had $15,000 of debt from a programming bootcamp because they didn’t meet our minimum requirements for programming ability. We hoped there was a better way.

RC Start was also something we were well positioned to do: at the time we had almost 700 alumni, all of whom were qualified to mentor someone new to programming.1 The sort of advice that’s useful when you’re just starting out generally doesn’t require specialized knowledge on behalf of your mentor, and it seemed likely that all RC alumni would be qualified to work with most RC Start participants.

Finally, we hoped that some of the people who did RC Start would eventually apply to RC, attend a retreat, and become part of the RC community. While programmers of all experience levels come to retreats at RC, you need to already be able to program in some capacity. RC Start was designed to be accessible to a wider range of people by relaxing the constraint that you had to already know how to program to participate. We knew there were lots of people just learning to program who would eventually make great Recursers. By building a connection to these people early, we thought they’d be more likely to apply to RC when they were ready. We were specifically interested in building a more diverse applicant pool for RC by reaching people from groups traditionally underrepresented in programming.

People liked it. Most participants found the experience valuable. Our alumni liked the opportunity to be helpful. Between January and September of 2016, we matched 167 RC Start participants with mentors from the RC community. Our community provided over 350 combined hours of mentoring. Where possible, we matched people who lived in the same city so that they could meet in person. Where it wasn’t possible, people met over Skype. Fifteen RC Start participants ended up attending a retreat and becoming members of the RC community. There was more demand than we expected, and we ran RC Start for nine months instead of the original two or three months that we planned.

Not everything went the way we thought it would. People who applied to RC Start had more programming experience than we expected. This meant that they had more specific requirements for mentorship that made it harder for us to match them (e.g. looking for a mentor with experience in Angular 2). The RC Start applicant pool also ended up being less racially diverse and gender balanced than the existing applicant pool for our retreats.

We also began to realize that RC Start was a strategic mistake: it didn’t help us build our community, which is the most valuable part of RC, and it wasn’t truly community-driven.

Our first mistake was that we couldn’t add RC Start participants to our community. We’ve known for a long time that the most valuable part of RC is the community. This is true from a business perspective – we make money by helping members of our community find jobs – but more importantly it’s true from an educational perspective. The people you meet, the projects you work on together, and the relationships you build are a large part of what makes attending RC valuable.

We couldn’t add RC Start participants to our community because our retreat had more stringent admissions requirements than RC Start. This meant RC Start participants couldn’t come to RC events, program at RC during alumni hours, or access Zulip and our mailing lists. We knew this going in, but we didn’t fully appreciate the ways that this would make things strategically difficult. It created some practical and logistical problems (e.g. RC Start participants wanted a place to chat online and ended up setting up a Slack instance themselves), but more importantly, it meant we were doing work that didn’t make the core of RC substantially better.

Our second strategic mistake was that while RC Start was superficially community-driven – all mentors were members of the RC community – it wasn’t community-driven in the way the rest of RC is. RC thrives on serendipity. When you come to a retreat, you meet and work with all kinds of people, many with wildly different interests. With so many people at RC, you’re likely to find plenty who are interested in the same things you are. The things you do at RC depend on who you meet, and how you collectively decide to spend your time.

RC Start didn’t work the same way. We paired each participant with one mentor. We did our best to make good matches, but if your mentor didn’t have the experience you were looking for, didn’t know the answers to your questions, or just wasn’t available, there wasn’t anyone else for you to talk to. This made RC Start fragile.

All of the things that motivated us to do RC Start are still true. We still think there should be more effective ways to support people who are just getting started with programming, and we’d still like to have more wonderful people apply to RC from an even more diverse range of backgrounds and experiences. While RC Start had some strategic issues, it’s given us insight into how we should approach these problems in the future.

We now have over 1,200 alumni.↩

