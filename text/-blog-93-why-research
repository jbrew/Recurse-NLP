Michael Nielsen, our first research fellow, started working at the Recurse Center one month ago. This is an email I wrote to RC faculty and staff last week about research at RC. The goal was to communicate the business case for having a research lab at RC. This means it doesn’t address a lot of important questions like what sort of research we will be doing, and how our research lab will fit with the rest of RC. We’re still figuring out the answers to these questions, and I’m going to write more about them in the future as we make progress. The email has been slightly modified to remove some personal information.

Now that Michael has had some time to settle in, it’s worth revisiting why we have research at RC. The last time we talked about this was at an offsite in the spring, before several of you had joined the company.

We’re running a research lab for three reasons: We think it will make RC a better learning environment, we think it will attract more great people to RC, and we think it’s an interesting thing worth doing in its own right.

I think Michael’s presence has already made RC a better learning environment: He’s given seminars that have been well received,1 and worked with a couple of Recursers on projects related to his research. One experienced alum cited Michael’s presence as a reason for coming back to RC to do another batch.

It’s less certain whether the research lab will convince more people to apply to RC. Good research takes time and is often not flashy. Frequently there is tension between good research and good marketing, and good research is our priority. Figuring out how to use the lab to convince more people to apply to RC without negatively impacting our research will not be easy and requires balance, taste, and patience.

We think research fits well with RC’s mission of building the best place for people to become better programmers. One of my favorite parts of our blog post announcing our research lab is the idea of discovering new abstractions or “power tools” that let people build more impressive, intricate, and beautiful software in less time. At RC, we spend a lot of time helping people become better programmers as individuals. It seems logical that we should also be working to help all programmers become better by giving them more powerful tools to express themselves.

We think we’re well positioned to run a research lab. We’re not part of a university, so we can sidestep the problems generally associated with research in academia (pressure to publish regularly, constant grant writing). Because we’re not building our business around the specifics of the research done at RC, we have much more freedom than most industrial labs. We also have a unique environment full of people with a wide range of backgrounds and ideas, a fantastic alumni community, and the ability to approach things from first principles and have a long-term outlook.

Our goal is to discover new ideas and distribute them as widely as possible. None of the research done at RC will be patented, and we will have a permanent license to distribute the results as widely as possible (researchers will retain copyright to their work). This makes it easy for us to collaborate with researchers elsewhere and does the most good for the world.

While we can’t know if this experiment will work in the long run, we’re planning for success and we want to make sure we don’t end up starting from scratch when Michael’s fellowship is over. Assuming we can afford it, our plan is to hire 1-2 more researchers to join Michael before he leaves.

A useful way to figure out what we should try next is imagining a version of RC that is the size of a large university and asking yourself what it would look like. It seems inevitable that research would be a big part of that future version of RC, and there’s no better time to start than now.

Notes from Michael’s seminar on Douglas Engelbart and Augmenting Human Intellect are available on GitHub.↩

